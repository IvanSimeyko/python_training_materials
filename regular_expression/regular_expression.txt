Мощный инструмент для поиска информации внутри текстового документа. В Python для
работы с ругулярными выражениями используется специальная библиотека (import re).
Концепция - с помощью ругулярных выражений описываем шаблон, а потом проверям
подходит ли текст под данный шаблон.
r - перед строкой делает строку сырой (raw)

re.match() - проверяет подходит ли строка под шаблон
re.findall() - находит  все подстроки, которые подходят под данный шаблон
re.search() - находит первую подстроку, которая подходит под шаблон
re.sub() - заменяет все подстроки которые подходят под шаблон на другой текст

[] - можно указать множество подходящих символов
.(точка)  --  подходит любой символ кроме переноса строки
# . ^ $ + ? { } [ ] | \ ( )  -- метасимволы
^ - означает - не подзодят буквы из диапазона
\d - [0-9] -- цифра
\D - [^0-9] -- что угодно но только не цифра
\s - [ \d\n\r\f\v]  -- ищем пробельные символы
\S - [^\d\n\r\f\v]  -- ищем все символы кроме пробелов
\w - [a-zA-Z0-9_] -- буквы + цифры + _
\W - [a-zA-Z0-9_] -- не будем находить буквы + цифры + _
b* - любое число смволом b, вклчая 0 символов
b+ - любое число смволом b, исклчая 0 символов
b? - ноль или одно вхождение символа b
b[3] - ищем три буквы b, которые идут подряд (три взождения буквы b)
b[2-4] - ищем от 2-х до 4-х вхождений буквы b

Поиск с помощью регулярных выражений - жадный, т.е. из несколький возможных
вариантов возвращается самый длиный.

() - группировка
'(test|text)*' - ищем или test или text
